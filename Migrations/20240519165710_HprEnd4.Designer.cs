// <auto-generated />
using System;
using HprEnd.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HprEnd.Migrations
{
    [DbContext(typeof(FilmyDbContext))]
    [Migration("20240519165710_HprEnd4")]
    partial class HprEnd4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HprEnd.Models.Film", b =>
                {
                    b.Property<int>("ID_Film")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Film"));

                    b.Property<DateTime>("Data_wydania")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dlugosc")
                        .HasColumnType("int");

                    b.Property<int>("ID_FilmOcena")
                        .HasColumnType("int");

                    b.Property<int>("ID_Kategoria")
                        .HasColumnType("int");

                    b.Property<int>("ID_Producent")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("ID_Film");

                    b.HasIndex("ID_FilmOcena");

                    b.HasIndex("ID_Kategoria")
                        .IsUnique();

                    b.HasIndex("ID_Producent");

                    b.ToTable("Filmy");
                });

            modelBuilder.Entity("HprEnd.Models.FilmOcena", b =>
                {
                    b.Property<int>("ID_FilmOcena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_FilmOcena"));

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.HasKey("ID_FilmOcena");

                    b.ToTable("Oceny");
                });

            modelBuilder.Entity("HprEnd.Models.Film_Kategoria", b =>
                {
                    b.Property<int>("ID_Kategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Kategoria"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Kategoria");

                    b.ToTable("Kategorie");
                });

            modelBuilder.Entity("HprEnd.Models.Opinie", b =>
                {
                    b.Property<int>("ID_Opinie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Opinie"));

                    b.Property<int>("ID_Film")
                        .HasColumnType("int");

                    b.Property<int>("ID_Uzytkownik")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Opinie");

                    b.HasIndex("ID_Film");

                    b.HasIndex("ID_Uzytkownik");

                    b.ToTable("Opinie");
                });

            modelBuilder.Entity("HprEnd.Models.Producent", b =>
                {
                    b.Property<int>("ID_Producent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Producent"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Siedziba")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Producent");

                    b.ToTable("Producenci");
                });

            modelBuilder.Entity("HprEnd.Models.Typ", b =>
                {
                    b.Property<int>("ID_Typ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Typ"));

                    b.Property<string>("Typ_uzytkownika")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Typ");

                    b.ToTable("Typy");
                });

            modelBuilder.Entity("HprEnd.Models.Uzytkownik", b =>
                {
                    b.Property<int>("ID_Uzytkownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Uzytkownik"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ID_Typ")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TypID_Typ")
                        .HasColumnType("int");

                    b.HasKey("ID_Uzytkownik");

                    b.HasIndex("TypID_Typ");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("HprEnd.Models.Film", b =>
                {
                    b.HasOne("HprEnd.Models.FilmOcena", "FilmOcena")
                        .WithMany("Filmy")
                        .HasForeignKey("ID_FilmOcena")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HprEnd.Models.Film_Kategoria", "Film_Kategoria")
                        .WithOne("Film")
                        .HasForeignKey("HprEnd.Models.Film", "ID_Kategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HprEnd.Models.Producent", "Producent")
                        .WithMany("Filmy")
                        .HasForeignKey("ID_Producent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmOcena");

                    b.Navigation("Film_Kategoria");

                    b.Navigation("Producent");
                });

            modelBuilder.Entity("HprEnd.Models.Opinie", b =>
                {
                    b.HasOne("HprEnd.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("ID_Film")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HprEnd.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("ID_Uzytkownik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("HprEnd.Models.Uzytkownik", b =>
                {
                    b.HasOne("HprEnd.Models.Typ", null)
                        .WithMany("Uzytkownicy")
                        .HasForeignKey("TypID_Typ");
                });

            modelBuilder.Entity("HprEnd.Models.FilmOcena", b =>
                {
                    b.Navigation("Filmy");
                });

            modelBuilder.Entity("HprEnd.Models.Film_Kategoria", b =>
                {
                    b.Navigation("Film")
                        .IsRequired();
                });

            modelBuilder.Entity("HprEnd.Models.Producent", b =>
                {
                    b.Navigation("Filmy");
                });

            modelBuilder.Entity("HprEnd.Models.Typ", b =>
                {
                    b.Navigation("Uzytkownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
